name: Build and Push Docker Image to GCP Artifact Registry

on:
  push:
    branches: [main]
    paths:
      - 'app.py'
      - 'requirements.txt'
      - 'Dockerfile'

env:
  PROJECT_ID: grogu-project                     # Your GCP project ID
  AR_REPO_LOCATION: us-central1                # Artifact Registry region
  AR_REPO_NAME: flask-app                      # Your Artifact Registry repository name
  IMAGE_NAME: flask-app                        # Image name within Artifact Registry

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }} # Base64-encoded service account key

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.AR_REPO_LOCATION }}-docker.pkg.dev

      - name: Build Docker Image
        run: |
          FULL_IMAGE_PATH=${{ env.AR_REPO_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO_NAME }}/${{ env.IMAGE_NAME }}
          IMAGE_TAG=${{ github.sha }}

          docker build -t $FULL_IMAGE_PATH:$IMAGE_TAG .
          docker tag $FULL_IMAGE_PATH:$IMAGE_TAG $FULL_IMAGE_PATH:latest

      - name: Push Docker Image
        run: |
          FULL_IMAGE_PATH=${{ env.AR_REPO_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO_NAME }}/${{ env.IMAGE_NAME }}
          IMAGE_TAG=${{ github.sha }}

          docker push $FULL_IMAGE_PATH:$IMAGE_TAG
          docker push $FULL_IMAGE_PATH:latest
