name: CI - Build and Push Docker Image to GCP Artifact Registry

on:
  push:
    branches: [main]
    paths:
      - 'app.py'
      - 'requirements.txt'
      - 'Dockerfile'

env:
  PROJECT_ID: grogu-project                  # Your GCP project ID
  AR_REPO_LOCATION: us-central1              # Artifact Registry region
  AR_REPO_NAME: flask-app                    # Your Artifact Registry repository name
  IMAGE_NAME: flask-app                      # Image name within Artifact Registry

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      # Removed 'id-token: write' as Workload Identity Federation is no longer used

    steps:
      - name: Checkout Application Repository
        uses: actions/checkout@v4

      # --- Authenticate to Google Cloud using Service Account Key (less secure) ---
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }} # Base64-encoded service account key.
                                                      # You MUST set this secret in your GitHub repo.

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.AR_REPO_LOCATION }}-docker.pkg.dev

      - name: Build and Tag Docker Image
        id: build_image_step
        run: |
          FULL_IMAGE_REPO="${{ env.AR_REPO_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.AR_REPO_NAME }}/${{ env.IMAGE_NAME }}"
          IMAGE_TAG="${{ github.sha }}"
          
          docker build -t "$FULL_IMAGE_REPO:$IMAGE_TAG" .
          docker tag "$FULL_IMAGE_REPO:$IMAGE_TAG" "$FULL_IMAGE_REPO:latest"

          echo "image_full_name=$FULL_IMAGE_REPO:$IMAGE_TAG" >> "$GITHUB_OUTPUT"
          echo "image_repository=$FULL_IMAGE_REPO" >> "$GITHUB_OUTPUT"

      - name: Push Docker Image to Artifact Registry
        run: |
          FULL_IMAGE_REPO="${{ steps.build_image_step.outputs.image_repository }}"
          IMAGE_TAG="${{ github.sha }}"
          
          docker push "$FULL_IMAGE_REPO:$IMAGE_TAG"
          docker push "$FULL_IMAGE_REPO:latest"

      # --- Update GitOps Repository for Dev Environment ---
      - name: Update Helm values file for Dev environment in GitOps repo
        if: success()
        uses: actions/checkout@v4
        with:
          repository: aashishrrjp/flask-app-deploy
          path: gitops-repo
          token: ${{ secrets.GH_PAT }}

      - name: Configure Git for Commit
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
        working-directory: gitops-repo

      - name: Update values-dev.yaml
        run: |
          DEV_VALUES_FILE="helm/flask/values-dev.yaml"
          NEW_IMAGE_REPOSITORY="${{ steps.build_image_step.outputs.image_repository }}"
          NEW_IMAGE_TAG="${{ github.sha }}"

          echo "Updating $DEV_VALUES_FILE with repository: $NEW_IMAGE_REPOSITORY and tag: $NEW_IMAGE_TAG"

          yq e ".image.repository = \"$NEW_IMAGE_REPOSITORY\" | .image.tag = \"$NEW_IMAGE_TAG\"" -i "$DEV_VALUES_FILE"

          git add "$DEV_VALUES_FILE"
          git diff --staged --quiet || (git commit -m "chore(dev): Update flask-app image to $NEW_IMAGE_TAG" && git push origin main)
          echo "Finished updating GitOps repository."
        working-directory: gitops-repo
